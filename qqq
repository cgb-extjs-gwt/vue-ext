[1mdiff --git a/src/components/development/monitoring/instances/charts.panel.vue b/src/components/development/monitoring/instances/charts.panel.vue[m
[1mindex 0445f8a..5119411 100644[m
[1m--- a/src/components/development/monitoring/instances/charts.panel.vue[m
[1m+++ b/src/components/development/monitoring/instances/charts.panel.vue[m
[1;35m@@ -40,7 +40,38 @@[m[1;37m [mexport default {[m
[1;37m         },[m
[1;37m     },[m
[1;37m [m
[1;32m+[m[1;32m    "watch": {[m
[1;32m+[m[1;32m        record ( newValue, OldValue ) {[m
[1;32m+[m[1;32m            if ( newValue !== OldValue ) this.refresh();[m
[1;32m+[m[1;32m        },[m
[1;32m+[m[1;32m    },[m
[1;32m+[m
[1;37m     "methods": {[m
[1;32m+[m[1;32m        async refresh () {[m
[1;32m+[m[1;32m            if ( !this.record ) return;[m
[1;32m+[m
[1;32m+[m[1;32m            this.$refs.cardsPanel.mask();[m
[1;32m+[m
[1;32m+[m[1;32m            const res = await this.$api.call( "development/monitoring/instances/get-instance-stats", this.record.id, this.period );[m
[1;32m+[m
[1;32m+[m[1;32m            this.$refs.cardsPanel.unmask();[m
[1;32m+[m
[1;32m+[m[1;32m            if ( !res.ok ) {[m
[1;32m+[m[1;32m                this.$refs.cardsPanel.setResult( res );[m
[1;32m+[m[1;32m            }[m
[1;32m+[m[1;32m            else if ( !res.data?.length ) {[m
[1;32m+[m[1;32m                this.$refs.cardsPanel.showNoDataCard();[m
[1;32m+[m[1;32m            }[m
[1;32m+[m[1;32m            else {[m
[1;32m+[m[1;32m                this.$refs.cardsPanel.setResult( res );[m
[1;32m+[m
[1;32m+[m[1;32m                this.$refs.cpuUsageChart.setData( res.data );[m
[1;32m+[m[1;32m                this.$refs.memryUsedChart.setData( res.data );[m
[1;32m+[m[1;32m                this.$refs.memryRssChart.setData( res.data );[m
[1;32m+[m[1;32m                this.$refs.fsUsedChart.setData( res.data );[m
[1;32m+[m[1;32m            }[m
[1;32m+[m[1;32m        },[m
[1;32m+[m
[1;37m         _createCpuUsageChart ( cmp ) {[m
[1;37m             const root = cmp.root,[m
[1;37m                 am5 = cmp.am5;[m
[1;35m@@ -595,29 +626,6 @@[m[1;37m [mexport default {[m
[1;37m [m
[1;37m             legend.data.setAll( chart.series.values );[m
[1;37m         },[m
[1;31m-[m
[1;31m-        async refresh () {[m
[1;31m-            this.$refs.cardsPanel.mask();[m
[1;31m-[m
[1;31m-            const res = await this.$api.call( "development/monitoring/instances/get-instance-stats", this.record.id, this.period );[m
[1;31m-[m
[1;31m-            this.$refs.cardsPanel.unmask();[m
[1;31m-[m
[1;31m-            if ( !res.ok ) {[m
[1;31m-                this.$refs.cardsPanel.setResult( res );[m
[1;31m-            }[m
[1;31m-            else if ( !res.data?.length ) {[m
[1;31m-                this.$refs.cardsPanel.showNoDataCard();[m
[1;31m-            }[m
[1;31m-            else {[m
[1;31m-                this.$refs.cardsPanel.setResult( res );[m
[1;31m-[m
[1;31m-                this.$refs.cpuUsageChart.setData( res.data );[m
[1;31m-                this.$refs.memryUsedChart.setData( res.data );[m
[1;31m-                this.$refs.memryRssChart.setData( res.data );[m
[1;31m-                this.$refs.fsUsedChart.setData( res.data );[m
[1;31m-            }[m
[1;31m-        },[m
[1;37m     },[m
[1;37m };[m
[1;37m </script>[m
[1mdiff --git a/src/components/development/monitoring/instances/latest.panel.vue b/src/components/development/monitoring/instances/latest.panel.vue[m
[1mindex 0d92421..ec24773 100644[m
[1m--- a/src/components/development/monitoring/instances/latest.panel.vue[m
[1m+++ b/src/components/development/monitoring/instances/latest.panel.vue[m
[1;35m@@ -1,37 +1,13 @@[m
[1;37m <template>[m
[1;31m-    <CardsPanel ref="cardsPanel" scrollable="true" @refresh="refresh">[m
[1;31m-        <template #docked>[m
[1;31m-            <ext-toolbar docked="top">[m
[1;31m-                <ext-spacer/>[m
[1;31m-                <ext-button iconCls="fa-solid fa-expand" :text="l10nd(`vue-ext`, `Open charts`)" @tap="_showChartsDialog"/>[m
[1;31m-                <ext-button iconCls="fa-solid fa-redo" :text="l10nd(`vue-ext`, `Refresh`)" @tap="refresh"/>[m
[1;31m-            </ext-toolbar>[m
[1;31m-        </template>[m
[1;31m-[m
[1;31m-        <template #data>[m
[1;31m-            <ext-container defaults='{"height":150}' layput="vbox" scrollable="true">[m
[1;31m-                <AmchartsPanel ref="cpuUserChart" :createChart="_createCpuUserChart"/>[m
[1;31m-[m
[1;31m-                <AmchartsPanel ref="cpuSystemChart" :createChart="_createCpuSystemChart"/>[m
[1;31m-[m
[1;31m-                <AmchartsPanel ref="memryUsedChart" :createChart="_createMemoryUsedChart"/>[m
[1;31m-[m
[1;31m-                <AmchartsPanel ref="memryRssChart" :createChart="_createMemoryRssChart"/>[m
[1;31m-[m
[1;31m-                <AmchartsPanel ref="fsUsedChart" :createChart="_createFsUsedChart"/>[m
[1;31m-            </ext-container>[m
[1;31m-        </template>[m
[1;31m-    </CardsPanel>[m
[1;32m+[m[1;32m    <CharstPanel period="1 hour" :record="record"/>[m
[1;37m </template>[m
[1;37m [m
[1;37m <script>[m
[1;31m-import CardsPanel from "#src/components/cards.panel";[m
[1;31m-import AmchartsPanel from "#vue/components/amcharts5/panel";[m
[1;31m-import * as am5xy from "@amcharts/amcharts5/xy";[m
[1;37m import HistoricalChartsDialog from "./historical.dialog";[m
[1;32m+[m[1;32mimport CharstPanel from "./charts.panel";[m
[1;37m [m
[1;37m export default {[m
[1;31m-    "components": { CardsPanel, AmchartsPanel },[m
[1;32m+[m[1;32m    "components": { CharstPanel },[m
[1;37m [m
[1;37m     "props": {[m
[1;37m         "record": {[m
[1;35m@@ -40,678 +16,7 @@[m[1;37m [mexport default {[m
[1;37m         },[m
[1;37m     },[m
[1;37m [m
[1;31m-    "watch": {[m
[1;31m-        record ( newValue, OldValue ) {[m
[1;31m-            if ( newValue !== OldValue ) this.refresh();[m
[1;31m-        },[m
[1;31m-    },[m
[1;31m-[m
[1;37m     "methods": {[m
[1;31m-        _createCpuUserChart ( cmp ) {[m
[1;31m-            const root = cmp.root,[m
[1;31m-                am5 = cmp.am5;[m
[1;31m-[m
[1;31m-            // chart[m
[1;31m-            const chart = root.container.children.push( am5xy.XYChart.new( root, {[m
[1;31m-                "layout": root.verticalLayout,[m
[1;31m-[m
[1;31m-                // "panX": true,[m
[1;31m-                // "pinchZoomX": true,[m
[1;31m-                // "wheelX": "panX",[m
[1;31m-                // "wheelY": "none",[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // title[m
[1;31m-            chart.children.unshift( am5.Label.new( root, {[m
[1;31m-                "text": this.l10nd( `vue-ext`, `CPU (user) for the last 60 30 minutes` ),[m
[1;31m-                "fontSize": 12,[m
[1;31m-                "x": am5.percent( 50 ),[m
[1;31m-                "centerX": am5.percent( 50 ),[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // x axis[m
[1;31m-            const xAxis = chart.xAxes.push( am5xy.DateAxis.new( root, {[m
[1;31m-                "maxDeviation": 0,[m
[1;31m-                "baseInterval": {[m
[1;31m-                    "timeUnit": "minute",[m
[1;31m-                    "count": 1,[m
[1;31m-                },[m
[1;31m-                "renderer": am5xy.AxisRendererX.new( root, {} ),[m
[1;31m-                "tooltip": am5.Tooltip.new( root, {} ),[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // y axis 1[m
[1;31m-            const yAxis1 = chart.yAxes.push( am5xy.ValueAxis.new( root, {[m
[1;31m-                "renderer": am5xy.AxisRendererY.new( root, {} ),[m
[1;31m-                "tooltip": am5.Tooltip.new( root, {} ),[m
[1;31m-                "tooltipNumberFormat": {},[m
[1;31m-                "numberFormat": {},[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // data processor[m
[1;31m-            const dateProcessor = am5.DataProcessor.new( root, {[m
[1;31m-                "dateFields": ["date"],[m
[1;31m-                "dateFormat": "i",[m
[1;31m-            } );[m
[1;31m-[m
[1;31m-            // serie 1[m
[1;31m-            const series1 = chart.series.push( am5xy.StepLineSeries.new( root, {[m
[1;31m-                "name": this.l10nd( `vue-ext`, `CPU (user)` ),[m
[1;31m-                xAxis,[m
[1;31m-                "yAxis": yAxis1,[m
[1;31m-                "valueXField": "date",[m
[1;31m-                "valueYField": "cpu_user",[m
[1;31m-                "tooltip": am5.Tooltip.new( root, {[m
[1;31m-                    "labelText": this.l10nd( `vue-ext`, `CPU (user)` ) + ": {valueY}",[m
[1;31m-                } ),[m
[1;31m-                "stroke": am5.color( "#00ff00" ),[m
[1;31m-                "fill": am5.color( "#00ff00" ),[m
[1;31m-                "connect": false,[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // data processor[m
[1;31m-            series1.data.processor = dateProcessor;[m
[1;31m-[m
[1;31m-            // fill settings[m
[1;31m-            series1.fills.template.setAll( {[m
[1;31m-                "fillOpacity": 0.3,[m
[1;31m-                "visible": true,[m
[1;31m-            } );[m
[1;31m-[m
[1;31m-            // cursor[m
[1;31m-            chart.set([m
[1;31m-                "cursor",[m
[1;31m-                am5xy.XYCursor.new( root, {[m
[1;31m-[m
[1;31m-                    // "behavior": "zoomX",[m
[1;31m-                } )[m
[1;31m-            );[m
[1;31m-[m
[1;31m-            // scroll bar[m
[1;31m-            // chart.set([m
[1;31m-            //     "scrollbarX",[m
[1;31m-            //     am5.Scrollbar.new( root, {[m
[1;31m-            //         "orientation": "horizontal",[m
[1;31m-            //     } )[m
[1;31m-            // );[m
[1;31m-[m
[1;31m-            // // legend[m
[1;31m-            // const legend = chart.children.push( am5.Legend.new( root, {[m
[1;31m-            //     "centerX": am5.p50,[m
[1;31m-            //     "x": am5.p50,[m
[1;31m-            // } ) );[m
[1;31m-[m
[1;31m-            // legend.data.setAll( chart.series.values );[m
[1;31m-        },[m
[1;31m-[m
[1;31m-        _createCpuSystemChart ( cmp ) {[m
[1;31m-            const root = cmp.root,[m
[1;31m-                am5 = cmp.am5;[m
[1;31m-[m
[1;31m-            // chart[m
[1;31m-            const chart = root.container.children.push( am5xy.XYChart.new( root, {[m
[1;31m-                "layout": root.verticalLayout,[m
[1;31m-[m
[1;31m-                // "panX": true,[m
[1;31m-                // "pinchZoomX": true,[m
[1;31m-                // "wheelX": "panX",[m
[1;31m-                // "wheelY": "none",[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // title[m
[1;31m-            chart.children.unshift( am5.Label.new( root, {[m
[1;31m-                "text": this.l10nd( `vue-ext`, `CPU (system) for the last 60 30 minutes` ),[m
[1;31m-                "fontSize": 12,[m
[1;31m-                "x": am5.percent( 50 ),[m
[1;31m-                "centerX": am5.percent( 50 ),[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // x axis[m
[1;31m-            const xAxis = chart.xAxes.push( am5xy.DateAxis.new( root, {[m
[1;31m-                "maxDeviation": 0,[m
[1;31m-                "baseInterval": {[m
[1;31m-                    "timeUnit": "minute",[m
[1;31m-                    "count": 1,[m
[1;31m-                },[m
[1;31m-                "renderer": am5xy.AxisRendererX.new( root, {} ),[m
[1;31m-                "tooltip": am5.Tooltip.new( root, {} ),[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // y axis 1[m
[1;31m-            const yAxis1 = chart.yAxes.push( am5xy.ValueAxis.new( root, {[m
[1;31m-                "renderer": am5xy.AxisRendererY.new( root, {} ),[m
[1;31m-                "tooltip": am5.Tooltip.new( root, {} ),[m
[1;31m-                "tooltipNumberFormat": {},[m
[1;31m-                "numberFormat": {},[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // data processor[m
[1;31m-            const dateProcessor = am5.DataProcessor.new( root, {[m
[1;31m-                "dateFields": ["date"],[m
[1;31m-                "dateFormat": "i",[m
[1;31m-            } );[m
[1;31m-[m
[1;31m-            // serie 1[m
[1;31m-            const series1 = chart.series.push( am5xy.StepLineSeries.new( root, {[m
[1;31m-                "name": this.l10nd( `vue-ext`, `CPU (system)` ),[m
[1;31m-                xAxis,[m
[1;31m-                "yAxis": yAxis1,[m
[1;31m-                "valueXField": "date",[m
[1;31m-                "valueYField": "cpu_system",[m
[1;31m-                "tooltip": am5.Tooltip.new( root, {[m
[1;31m-                    "labelText": this.l10nd( `vue-ext`, `CPU (system)` ) + ": {valueY}",[m
[1;31m-                } ),[m
[1;31m-                "stroke": am5.color( "#00ff00" ),[m
[1;31m-                "fill": am5.color( "#00ff00" ),[m
[1;31m-                "connect": false,[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // data processor[m
[1;31m-            series1.data.processor = dateProcessor;[m
[1;31m-[m
[1;31m-            // fill settings[m
[1;31m-            series1.fills.template.setAll( {[m
[1;31m-                "fillOpacity": 0.3,[m
[1;31m-                "visible": true,[m
[1;31m-            } );[m
[1;31m-[m
[1;31m-            // cursor[m
[1;31m-            chart.set([m
[1;31m-                "cursor",[m
[1;31m-                am5xy.XYCursor.new( root, {[m
[1;31m-[m
[1;31m-                    // "behavior": "zoomX",[m
[1;31m-                } )[m
[1;31m-            );[m
[1;31m-[m
[1;31m-            // scroll bar[m
[1;31m-            // chart.set([m
[1;31m-            //     "scrollbarX",[m
[1;31m-            //     am5.Scrollbar.new( root, {[m
[1;31m-            //         "orientation": "horizontal",[m
[1;31m-            //     } )[m
[1;31m-            // );[m
[1;31m-[m
[1;31m-            // legend[m
[1;31m-            // const legend = chart.children.push( am5.Legend.new( root, {[m
[1;31m-            //     "centerX": am5.p50,[m
[1;31m-            //     "x": am5.p50,[m
[1;31m-            // } ) );[m
[1;31m-[m
[1;31m-            // legend.data.setAll( chart.series.values );[m
[1;31m-        },[m
[1;31m-[m
[1;31m-        _createMemoryUsedChart ( cmp ) {[m
[1;31m-            const root = cmp.root,[m
[1;31m-                am5 = cmp.am5;[m
[1;31m-[m
[1;31m-            // chart[m
[1;31m-            const chart = root.container.children.push( am5xy.XYChart.new( root, {[m
[1;31m-                "layout": root.verticalLayout,[m
[1;31m-[m
[1;31m-                // "panX": true,[m
[1;31m-                // "pinchZoomX": true,[m
[1;31m-                // "wheelX": "panX",[m
[1;31m-                // "wheelY": "none",[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // title[m
[1;31m-            chart.children.unshift( am5.Label.new( root, {[m
[1;31m-                "text": this.l10nd( `vue-ext`, `Used memory (MB) for the last 60 30 minutes` ),[m
[1;31m-                "fontSize": 12,[m
[1;31m-                "x": am5.percent( 50 ),[m
[1;31m-                "centerX": am5.percent( 50 ),[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // x axis[m
[1;31m-            const xAxis = chart.xAxes.push( am5xy.DateAxis.new( root, {[m
[1;31m-                "maxDeviation": 0,[m
[1;31m-                "baseInterval": {[m
[1;31m-                    "timeUnit": "minute",[m
[1;31m-                    "count": 1,[m
[1;31m-                },[m
[1;31m-                "renderer": am5xy.AxisRendererX.new( root, {} ),[m
[1;31m-                "tooltip": am5.Tooltip.new( root, {} ),[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // y axis 1[m
[1;31m-            const yAxis1 = chart.yAxes.push( am5xy.ValueAxis.new( root, {[m
[1;31m-                "renderer": am5xy.AxisRendererY.new( root, {} ),[m
[1;31m-                "tooltip": am5.Tooltip.new( root, {} ),[m
[1;31m-                "tooltipNumberFormat": { "style": "unit", "unit": "megabyte" },[m
[1;31m-                "numberFormat": { "style": "unit", "unit": "megabyte" },[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // y axis 2[m
[1;31m-            const yAxis2 = chart.yAxes.push( am5xy.ValueAxis.new( root, {[m
[1;31m-                "min": 0,[m
[1;31m-                "max": 1,[m
[1;31m-                "renderer": am5xy.AxisRendererY.new( root, {[m
[1;31m-                    "opposite": true,[m
[1;31m-                } ),[m
[1;31m-                "tooltip": am5.Tooltip.new( root, {} ),[m
[1;31m-                "tooltipNumberFormat": { "style": "percent", "maximumFractionDigits": 0 },[m
[1;31m-                "numberFormat": { "style": "percent", "maximumFractionDigits": 0 },[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // data processor[m
[1;31m-            const dateProcessor = am5.DataProcessor.new( root, {[m
[1;31m-                "dateFields": ["date"],[m
[1;31m-                "dateFormat": "i",[m
[1;31m-            } );[m
[1;31m-[m
[1;31m-            // serie 1[m
[1;31m-            const series1 = chart.series.push( am5xy.StepLineSeries.new( root, {[m
[1;31m-                "name": this.l10nd( `vue-ext`, `Used memory (MB)` ),[m
[1;31m-                xAxis,[m
[1;31m-                "yAxis": yAxis1,[m
[1;31m-                "valueXField": "date",[m
[1;31m-                "valueYField": "memory_used",[m
[1;31m-                "tooltip": am5.Tooltip.new( root, {[m
[1;31m-                    "labelText": this.l10nd( `vue-ext`, `Used memory` ) + ": {valueY.formatNumber()}",[m
[1;31m-                } ),[m
[1;31m-                "stroke": am5.color( "#00ff00" ),[m
[1;31m-                "fill": am5.color( "#00ff00" ),[m
[1;31m-                "connect": false,[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // data processor[m
[1;31m-            series1.data.processor = dateProcessor;[m
[1;31m-[m
[1;31m-            // serie tooltip label formatters[m
[1;31m-            series1.get( "tooltip" ).label.set([m
[1;31m-                "numberFormatter",[m
[1;31m-                am5.NumberFormatter.new( root, {[m
[1;31m-                    "numberFormat": { "style": "unit", "unit": "megabyte" },[m
[1;31m-                } )[m
[1;31m-            );[m
[1;31m-[m
[1;31m-            // fill settings[m
[1;31m-            series1.fills.template.setAll( {[m
[1;31m-                "fillOpacity": 0.3,[m
[1;31m-                "visible": true,[m
[1;31m-            } );[m
[1;31m-[m
[1;31m-            // serie 2[m
[1;31m-            const series2 = chart.series.push( am5xy.StepLineSeries.new( root, {[m
[1;31m-                "name": this.l10nd( `vue-ext`, `Used memory (%)` ),[m
[1;31m-                xAxis,[m
[1;31m-                "yAxis": yAxis2,[m
[1;31m-                "valueXField": "date",[m
[1;31m-                "valueYField": "memory_used_percent",[m
[1;31m-                "tooltip": am5.Tooltip.new( root, {[m
[1;31m-                    "labelText": this.l10nd( `vue-ext`, `Used memory` ) + ": {valueY.formatNumber()}",[m
[1;31m-                } ),[m
[1;31m-                "stroke": am5.color( "#ff0000" ),[m
[1;31m-                "connect": true,[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // data processor[m
[1;31m-            series2.data.processor = dateProcessor;[m
[1;31m-[m
[1;31m-            // serie tooltip label formatters[m
[1;31m-            series2.get( "tooltip" ).label.set([m
[1;31m-                "numberFormatter",[m
[1;31m-                am5.NumberFormatter.new( root, {[m
[1;31m-                    "numberFormat": { "style": "percent" },[m
[1;31m-                } )[m
[1;31m-            );[m
[1;31m-[m
[1;31m-            // stroke settings[m
[1;31m-            series2.strokes.template.setAll( {[m
[1;31m-                "strokeWidth": 3,[m
[1;31m-            } );[m
[1;31m-[m
[1;31m-            // cursor[m
[1;31m-            chart.set([m
[1;31m-                "cursor",[m
[1;31m-                am5xy.XYCursor.new( root, {[m
[1;31m-[m
[1;31m-                    // "behavior": "zoomX",[m
[1;31m-                } )[m
[1;31m-            );[m
[1;31m-[m
[1;31m-            // scroll bar[m
[1;31m-            // chart.set([m
[1;31m-            //     "scrollbarX",[m
[1;31m-            //     am5.Scrollbar.new( root, {[m
[1;31m-            //         "orientation": "horizontal",[m
[1;31m-            //     } )[m
[1;31m-            // );[m
[1;31m-[m
[1;31m-            // legend[m
[1;31m-            // const legend = chart.children.push( am5.Legend.new( root, {[m
[1;31m-            //     "centerX": am5.p50,[m
[1;31m-            //     "x": am5.p50,[m
[1;31m-            // } ) );[m
[1;31m-[m
[1;31m-            // legend.data.setAll( chart.series.values );[m
[1;31m-        },[m
[1;31m-[m
[1;31m-        _createMemoryRssChart ( cmp ) {[m
[1;31m-            const root = cmp.root,[m
[1;31m-                am5 = cmp.am5;[m
[1;31m-[m
[1;31m-            // chart[m
[1;31m-            const chart = root.container.children.push( am5xy.XYChart.new( root, {[m
[1;31m-                "layout": root.verticalLayout,[m
[1;31m-[m
[1;31m-                // "panX": true,[m
[1;31m-                // "pinchZoomX": true,[m
[1;31m-                // "wheelX": "panX",[m
[1;31m-                // "wheelY": "none",[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // title[m
[1;31m-            chart.children.unshift( am5.Label.new( root, {[m
[1;31m-                "text": this.l10nd( `vue-ext`, `RSS memory (MB) for the last 60 30 minutes` ),[m
[1;31m-                "fontSize": 12,[m
[1;31m-                "x": am5.percent( 50 ),[m
[1;31m-                "centerX": am5.percent( 50 ),[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // x axis[m
[1;31m-            const xAxis = chart.xAxes.push( am5xy.DateAxis.new( root, {[m
[1;31m-                "maxDeviation": 0,[m
[1;31m-                "baseInterval": {[m
[1;31m-                    "timeUnit": "minute",[m
[1;31m-                    "count": 1,[m
[1;31m-                },[m
[1;31m-                "renderer": am5xy.AxisRendererX.new( root, {} ),[m
[1;31m-                "tooltip": am5.Tooltip.new( root, {} ),[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // y axis 1[m
[1;31m-            const yAxis1 = chart.yAxes.push( am5xy.ValueAxis.new( root, {[m
[1;31m-                "renderer": am5xy.AxisRendererY.new( root, {} ),[m
[1;31m-                "tooltip": am5.Tooltip.new( root, {} ),[m
[1;31m-                "tooltipNumberFormat": { "style": "unit", "unit": "megabyte" },[m
[1;31m-                "numberFormat": { "style": "unit", "unit": "megabyte" },[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // y axis 2[m
[1;31m-            const yAxis2 = chart.yAxes.push( am5xy.ValueAxis.new( root, {[m
[1;31m-                "min": 0,[m
[1;31m-                "max": 1,[m
[1;31m-                "renderer": am5xy.AxisRendererY.new( root, {[m
[1;31m-                    "opposite": true,[m
[1;31m-                } ),[m
[1;31m-                "tooltip": am5.Tooltip.new( root, {} ),[m
[1;31m-                "tooltipNumberFormat": { "style": "percent", "maximumFractionDigits": 0 },[m
[1;31m-                "numberFormat": { "style": "percent", "maximumFractionDigits": 0 },[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // data processor[m
[1;31m-            const dateProcessor = am5.DataProcessor.new( root, {[m
[1;31m-                "dateFields": ["date"],[m
[1;31m-                "dateFormat": "i",[m
[1;31m-            } );[m
[1;31m-[m
[1;31m-            // serie 1[m
[1;31m-            const series1 = chart.series.push( am5xy.StepLineSeries.new( root, {[m
[1;31m-                "name": this.l10nd( `vue-ext`, `RSS memory (MB)` ),[m
[1;31m-                xAxis,[m
[1;31m-                "yAxis": yAxis1,[m
[1;31m-                "valueXField": "date",[m
[1;31m-                "valueYField": "memory_rss",[m
[1;31m-                "tooltip": am5.Tooltip.new( root, {[m
[1;31m-                    "labelText": this.l10nd( `vue-ext`, `RSS memory` ) + ": {valueY.formatNumber()}",[m
[1;31m-                } ),[m
[1;31m-                "stroke": am5.color( "#00ff00" ),[m
[1;31m-                "fill": am5.color( "#00ff00" ),[m
[1;31m-                "connect": false,[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // data processor[m
[1;31m-            series1.data.processor = dateProcessor;[m
[1;31m-[m
[1;31m-            // serie tooltip label formatters[m
[1;31m-            series1.get( "tooltip" ).label.set([m
[1;31m-                "numberFormatter",[m
[1;31m-                am5.NumberFormatter.new( root, {[m
[1;31m-                    "numberFormat": { "style": "unit", "unit": "megabyte" },[m
[1;31m-                } )[m
[1;31m-            );[m
[1;31m-[m
[1;31m-            // fill settings[m
[1;31m-            series1.fills.template.setAll( {[m
[1;31m-                "fillOpacity": 0.3,[m
[1;31m-                "visible": true,[m
[1;31m-            } );[m
[1;31m-[m
[1;31m-            // serie 2[m
[1;31m-            const series2 = chart.series.push( am5xy.StepLineSeries.new( root, {[m
[1;31m-                "name": this.l10nd( `vue-ext`, `RSS memory (%)` ),[m
[1;31m-                xAxis,[m
[1;31m-                "yAxis": yAxis2,[m
[1;31m-                "valueXField": "date",[m
[1;31m-                "valueYField": "memory_rss_percent",[m
[1;31m-                "tooltip": am5.Tooltip.new( root, {[m
[1;31m-                    "labelText": this.l10nd( `vue-ext`, `RSS memory` ) + ": {valueY.formatNumber()}",[m
[1;31m-                } ),[m
[1;31m-                "stroke": am5.color( "#ff0000" ),[m
[1;31m-                "connect": true,[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // data processor[m
[1;31m-            series2.data.processor = dateProcessor;[m
[1;31m-[m
[1;31m-            // serie tooltip label formatters[m
[1;31m-            series2.get( "tooltip" ).label.set([m
[1;31m-                "numberFormatter",[m
[1;31m-                am5.NumberFormatter.new( root, {[m
[1;31m-                    "numberFormat": { "style": "percent" },[m
[1;31m-                } )[m
[1;31m-            );[m
[1;31m-[m
[1;31m-            // stroke settings[m
[1;31m-            series2.strokes.template.setAll( {[m
[1;31m-                "strokeWidth": 3,[m
[1;31m-            } );[m
[1;31m-[m
[1;31m-            // cursor[m
[1;31m-            chart.set([m
[1;31m-                "cursor",[m
[1;31m-                am5xy.XYCursor.new( root, {[m
[1;31m-[m
[1;31m-                    // "behavior": "zoomX",[m
[1;31m-                } )[m
[1;31m-            );[m
[1;31m-[m
[1;31m-            // scroll bar[m
[1;31m-            // chart.set([m
[1;31m-            //     "scrollbarX",[m
[1;31m-            //     am5.Scrollbar.new( root, {[m
[1;31m-            //         "orientation": "horizontal",[m
[1;31m-            //     } )[m
[1;31m-            // );[m
[1;31m-[m
[1;31m-            // legend[m
[1;31m-            // const legend = chart.children.push( am5.Legend.new( root, {[m
[1;31m-            //     "centerX": am5.p50,[m
[1;31m-            //     "x": am5.p50,[m
[1;31m-            // } ) );[m
[1;31m-[m
[1;31m-            // legend.data.setAll( chart.series.values );[m
[1;31m-        },[m
[1;31m-[m
[1;31m-        _createFsUsedChart ( cmp ) {[m
[1;31m-            const root = cmp.root,[m
[1;31m-                am5 = cmp.am5;[m
[1;31m-[m
[1;31m-            // chart[m
[1;31m-            const chart = root.container.children.push( am5xy.XYChart.new( root, {[m
[1;31m-                "layout": root.verticalLayout,[m
[1;31m-[m
[1;31m-                // "panX": true,[m
[1;31m-                // "pinchZoomX": true,[m
[1;31m-                // "wheelX": "panX",[m
[1;31m-                // "wheelY": "none",[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // title[m
[1;31m-            chart.children.unshift( am5.Label.new( root, {[m
[1;31m-                "text": this.l10nd( `vue-ext`, `FS used (MB) for the last 60 30 minutes` ),[m
[1;31m-                "fontSize": 12,[m
[1;31m-                "x": am5.percent( 50 ),[m
[1;31m-                "centerX": am5.percent( 50 ),[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // x axis[m
[1;31m-            const xAxis = chart.xAxes.push( am5xy.DateAxis.new( root, {[m
[1;31m-                "maxDeviation": 0,[m
[1;31m-                "baseInterval": {[m
[1;31m-                    "timeUnit": "minute",[m
[1;31m-                    "count": 1,[m
[1;31m-                },[m
[1;31m-                "renderer": am5xy.AxisRendererX.new( root, {} ),[m
[1;31m-                "tooltip": am5.Tooltip.new( root, {} ),[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // y axis 1[m
[1;31m-            const yAxis1 = chart.yAxes.push( am5xy.ValueAxis.new( root, {[m
[1;31m-                "renderer": am5xy.AxisRendererY.new( root, {} ),[m
[1;31m-                "tooltip": am5.Tooltip.new( root, {} ),[m
[1;31m-                "tooltipNumberFormat": { "style": "unit", "unit": "megabyte" },[m
[1;31m-                "numberFormat": { "style": "unit", "unit": "megabyte" },[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // y axis 2[m
[1;31m-            const yAxis2 = chart.yAxes.push( am5xy.ValueAxis.new( root, {[m
[1;31m-                "min": 0,[m
[1;31m-                "max": 1,[m
[1;31m-                "renderer": am5xy.AxisRendererY.new( root, {[m
[1;31m-                    "opposite": true,[m
[1;31m-                } ),[m
[1;31m-                "tooltip": am5.Tooltip.new( root, {} ),[m
[1;31m-                "tooltipNumberFormat": { "style": "percent", "maximumFractionDigits": 0 },[m
[1;31m-                "numberFormat": { "style": "percent", "maximumFractionDigits": 0 },[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // data processor[m
[1;31m-            const dateProcessor = am5.DataProcessor.new( root, {[m
[1;31m-                "dateFields": ["date"],[m
[1;31m-                "dateFormat": "i",[m
[1;31m-            } );[m
[1;31m-[m
[1;31m-            // serie 1[m
[1;31m-            const series1 = chart.series.push( am5xy.SmoothedXLineSeries.new( root, {[m
[1;31m-                "name": this.l10nd( `vue-ext`, `FS used (MB)` ),[m
[1;31m-                xAxis,[m
[1;31m-                "yAxis": yAxis1,[m
[1;31m-                "valueXField": "date",[m
[1;31m-                "valueYField": "fs_used",[m
[1;31m-                "tooltip": am5.Tooltip.new( root, {[m
[1;31m-                    "labelText": this.l10nd( `vue-ext`, `FS used` ) + ": {valueY.formatNumber()}",[m
[1;31m-                } ),[m
[1;31m-                "stroke": am5.color( "#00ff00" ),[m
[1;31m-                "fill": am5.color( "#00ff00" ),[m
[1;31m-                "connect": true,[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // data processor[m
[1;31m-            series1.data.processor = dateProcessor;[m
[1;31m-[m
[1;31m-            // serie tooltip label formatters[m
[1;31m-            series1.get( "tooltip" ).label.set([m
[1;31m-                "numberFormatter",[m
[1;31m-                am5.NumberFormatter.new( root, {[m
[1;31m-                    "numberFormat": { "style": "unit", "unit": "megabyte" },[m
[1;31m-                } )[m
[1;31m-            );[m
[1;31m-[m
[1;31m-            // fill settings[m
[1;31m-            series1.fills.template.setAll( {[m
[1;31m-                "fillOpacity": 0.3,[m
[1;31m-                "visible": true,[m
[1;31m-            } );[m
[1;31m-[m
[1;31m-            // serie 2[m
[1;31m-            const series2 = chart.series.push( am5xy.StepLineSeries.new( root, {[m
[1;31m-                "name": this.l10nd( `vue-ext`, `FS used (%)` ),[m
[1;31m-                xAxis,[m
[1;31m-                "yAxis": yAxis2,[m
[1;31m-                "valueXField": "date",[m
[1;31m-                "valueYField": "fs_used_percent",[m
[1;31m-                "tooltip": am5.Tooltip.new( root, {[m
[1;31m-                    "labelText": this.l10nd( `vue-ext`, `FS used` ) + ": {valueY.formatNumber()}",[m
[1;31m-                } ),[m
[1;31m-                "stroke": am5.color( "#ff0000" ),[m
[1;31m-                "connect": true,[m
[1;31m-            } ) );[m
[1;31m-[m
[1;31m-            // data processor[m
[1;31m-            series2.data.processor = dateProcessor;[m
[1;31m-[m
[1;31m-            // serie tooltip label formatters[m
[1;31m-            series2.get( "tooltip" ).label.set([m
[1;31m-                "numberFormatter",[m
[1;31m-                am5.NumberFormatter.new( root, {[m
[1;31m-                    "numberFormat": { "style": "percent" },[m
[1;31m-                } )[m
[1;31m-            );[m
[1;31m-[m
[1;31m-            // stroke settings[m
[1;31m-            series2.strokes.template.setAll( {[m
[1;31m-                "strokeWidth": 3,[m
[1;31m-            } );[m
[1;31m-[m
[1;31m-            // cursor[m
[1;31m-            chart.set([m
[1;31m-                "cursor",[m
[1;31m-                am5xy.XYCursor.new( root, {[m
[1;31m-[m
[1;31m-                    // "behavior": "zoomX",[m
[1;31m-                } )[m
[1;31m-            );[m
[1;31m-[m
[1;31m-            // scroll bar[m
[1;31m-            // chart.set([m
[1;31m-            //     "scrollbarX",[m
[1;31m-            //     am5.Scrollbar.new( root, {[m
[1;31m-            //         "orientation": "horizontal",[m
[1;31m-            //     } )[m
[1;31m-            // );[m
[1;31m-[m
[1;31m-            // legend[m
[1;31m-            // const legend = chart.children.push( am5.Legend.new( root, {[m
[1;31m-            //     "centerX": am5.p50,[m
[1;31m-            //     "x": am5.p50,[m
[1;31m-            // } ) );[m
[1;31m-[m
[1;31m-            // legend.data.setAll( chart.series.values );[m
[1;31m-        },[m
[1;31m-[m
[1;31m-        async refresh () {[m
[1;31m-            if ( !this.record ) {[m
[1;31m-                this.$refs.cardsPanel.showNoDataCard();[m
[1;31m-[m
[1;31m-                return;[m
[1;31m-            }[m
[1;31m-[m
[1;31m-            this.$refs.cardsPanel.mask();[m
[1;31m-[m
[1;31m-            const res = await this.$api.call( "development/monitoring/instances/get-instance-stats", this.record.id, "1 hour" );[m
[1;31m-[m
[1;31m-            this.$refs.cardsPanel.unmask();[m
[1;31m-[m
[1;31m-            if ( !res.ok ) {[m
[1;31m-                this.$refs.cardsPanel.setResult( res );[m
[1;31m-            }[m
[1;31m-            else if ( !res.data?.length ) {[m
[1;31m-                this.$refs.cardsPanel.showNoDataCard();[m
[1;31m-            }[m
[1;31m-            else {[m
[1;31m-                this.$refs.cardsPanel.setResult( res );[m
[1;31m-[m
[1;31m-                this.$refs.cpuUserChart.setData( res.data );[m
[1;31m-                this.$refs.cpuSystemChart.setData( res.data );[m
[1;31m-                this.$refs.memryUsedChart.setData( res.data );[m
[1;31m-                this.$refs.memryRssChart.setData( res.data );[m
[1;31m-                this.$refs.fsUsedChart.setData( res.data );[m
[1;31m-            }[m
[1;31m-        },[m
[1;31m-[m
[1;37m         async _showChartsDialog () {[m
[1;37m             if ( !this.record ) return;[m
[1;37m [m
